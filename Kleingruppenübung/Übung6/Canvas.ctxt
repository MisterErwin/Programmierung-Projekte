#BlueJ class context
comment0.params=g\ boundsParam
comment0.target=void\ addCurrentPos(java.awt.Graphics2D,\ java.awt.Rectangle)
comment0.text=\r\n\ Adds\ the\ current\ position\ to\ the\ specified\ bounds.\r\n\ @param\ g\ The\ graphics\ object\ to\ draw\ on.\r\n\ @param\ boundsParam\ The\ bounds\ of\ the\ canvas.\r\n
comment1.params=point\ boundsParam\ g
comment1.target=void\ addToBounds(java.awt.geom.Point2D,\ java.awt.Rectangle,\ java.awt.Graphics2D)
comment1.text=\r\n\ Adds\ a\ point\ to\ the\ bounds,\ transformed\ as\ in\ the\ current\ graphics\ object.\r\n\ @param\ point\ The\ point\ to\ add\ to\ the\ bounds.\r\n\ @param\ boundsParam\ The\ bounds.\r\n\ @param\ g\ The\ graphics\ object\ storing\ affine\ transformations.\r\n
comment10.params=length
comment10.target=void\ moveForward(int)
comment10.text=\r\n\ Moves\ the\ current\ position\ by\ {@code\ length}\ units\ in\ the\ current\ direction\ without\ drawing\ anything.\r\n\ @param\ length\ The\ measure\ to\ move\ the\ current\ position.\r\n
comment11.params=
comment11.target=void\ pop()
comment11.text=\r\n\ Sets\ the\ current\ position\ and\ orientation\ to\ the\ top-most\ stored\ position\ and\ orientation.\ See\ {@link\ \#push()}.\r\n
comment12.params=
comment12.target=void\ push()
comment12.text=\r\n\ Stores\ the\ current\ position\ and\ orientation.\r\n\ By\ a\ subsequent\ {@link\ \#pop()},\ this\ position\ and\ orientation\ can\ be\ restored.\r\n
comment13.params=
comment13.target=void\ refresh()
comment13.text=\r\n\ Refreshes\ the\ shown\ frame.\r\n
comment14.params=degrees
comment14.target=void\ rotate(int)
comment14.text=\r\n\ Turns\ the\ current\ orientation\ by\ {@code\ degrees}\ degrees\ (360\ degrees\ form\ a\ circle)\ clockwise.\r\n\ Negative\ values\ turn\ counter-clockwise.\r\n\ @param\ degrees\ The\ degrees\ to\ turn\ the\ orientation.\r\n
comment15.params=length
comment15.target=void\ square(double)
comment15.text=\r\n\ Draws\ a\ filled\ square\ of\ the\ specified\ length\ {@code\ length}\ at\ the\ current\ position\ and\ with\ the\ current\ \r\n\ orientation.\r\n\ @param\ length\ The\ length\ of\ the\ square\ to\ draw.\r\n
comment16.params=action
comment16.target=void\ addAction(Canvas.GraphicAction)
comment16.text=\r\n\ Adds\ the\ specified\ action\ to\ the\ list\ of\ actions\ to\ be\ executed\ and\ updates\ the\ corresponding\ counter.\ Moreover,\ \r\n\ the\ current\ bounds\ are\ deleted.\r\n\ @param\ action\ The\ action\ to\ add.\r\n
comment2.params=r\ boundsParam\ g
comment2.target=void\ addToBounds(java.awt.geom.Rectangle2D,\ java.awt.Rectangle,\ java.awt.Graphics2D)
comment2.text=\r\n\ Adds\ a\ rectangle\ to\ the\ bounds,\ transformed\ as\ in\ the\ current\ graphics\ object.\r\n\ @param\ r\ The\ rectangle\ to\ add\ to\ the\ bounds.\r\n\ @param\ boundsParam\ The\ bounds.\r\n\ @param\ g\ The\ graphics\ object\ storing\ affine\ transformations.\r\n
comment3.params=
comment3.target=java.awt.Dimension\ getPreferredSize()
comment4.params=g
comment4.target=void\ paintComponent(java.awt.Graphics)
comment5.params=e
comment5.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment6.params=c
comment6.target=void\ chooseColor(java.awt.Color)
comment6.text=\r\n\ Choose\ the\ specified\ color\ for\ further\ painting.\r\n\ @param\ c\ The\ color\ to\ choose.\r\n
comment7.params=length
comment7.target=void\ drawForward(int)
comment7.text=\r\n\ Draws\ a\ line\ of\ length\ {@code\ length}\ in\ the\ current\ direction.\ The\ current\ position\ is\ moved\ to\ the\ end\ of\ the\ \r\n\ line.\r\n\ @param\ length\ The\ length\ of\ the\ line\ to\ draw.\r\n
comment8.params=text
comment8.target=void\ drawTextLabel(java.lang.String)
comment8.text=\r\n\ Draws\ a\ box\ with\ the\ text\ {@code\ text}\ at\ the\ current\ position.\r\n\ @param\ text\ The\ text\ to\ draw.\r\n
comment9.params=x\ y
comment9.target=void\ move(double,\ double)
comment9.text=\r\n\ Moves\ the\ current\ position\ by\ {@code\ x}\ units\ to\ the\ right\ and\ {@code\ y}\ units\ down\ according\ to\ the\ current\ \r\n\ orientation\ (so\ if\ the\ orientation\ is\ rotated\ by\ 180\ degrees,\ the\ move\ goes\ left\ and\ up\ instead\ of\ right\ and\ \r\n\ down).\ This\ does\ not\ draw\ anything.\r\n\ @param\ x\ The\ measure\ to\ go\ right.\r\n\ @param\ y\ The\ measure\ to\ go\ down.\r\n
numComments=17
