#BlueJ class context
comment0.params=
comment0.target=Tree()
comment0.text=\r\n\ Erstellt\ einen\ leeren\ Baum\r\n
comment1.params=xs
comment1.target=Tree(int[])
comment1.text=\r\n\ Erstellt\ einen\ Baum\ mit\ den\ vorgegebenen\ Zahlen.\r\n
comment2.params=
comment2.target=boolean\ isEmpty()
comment2.text=\r\n\ Test\ ob\ der\ Baum\ leer\ ist\r\n\ @return\ true,\ falls\ der\ Baum\ leer\ ist,\ sonst\ false\r\n
comment3.params=x
comment3.target=void\ insert(int)
comment3.text=\r\n\ Fuegt\ eine\ Zahl\ ein.\ Keine\ Aenderung,\ wenn\ das\ Element\r\n\ schon\ enthalten\ ist.\r\n\ @param\ x\ einzufuegende\ Zahl\r\n
comment4.params=x
comment4.target=boolean\ simpleSearch(int)
comment4.text=\r\n\ Sucht\ x,\ ohne\ den\ Baum\ zu\ veraendern.\r\n\ @return\ true,\ falls\ x\ im\ Baum\ enthalten\ ist,\ sonst\ false\r\n
comment5.params=x
comment5.target=boolean\ search(int)
comment5.text=\r\n\ Sucht\ x\ und\ rotiert\ den\ Knoten,\ bei\ dem\ die\ Suche\ nach\ x\ endet,\ in\ die\ Wurzel.\r\n\ @return\ true,\ falls\ x\ im\ Baum\ enthalten\ ist,\ sonst\ false\r\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\r\n\ Sortierte\ Ausgabe\ aller\ Elemente.\r\n
comment7.params=
comment7.target=java.lang.String\ toDot()
comment7.text=\r\n\ Wandelt\ den\ Baum\ in\ einen\ Graphen\ im\ dot\ Format\ um.\r\n
comment8.params=path
comment8.target=boolean\ writeToFile(java.lang.String)
comment8.text=\r\n\ Speichert\ die\ dot\ Repraesentation\ in\ einer\ Datei.\r\n\r\n\ @param\ path\ Pfad\ unter\ dem\ gespeichert\ werden\ soll\ (Dateiname)\r\n\ @return\ true,\ falls\ erfolgreich\ gespeichert\ wurde,\ sonst\ false\r\n\ @see\ Tree\#toDot()\r\n
comment9.params=args
comment9.target=void\ main(java.lang.String[])
comment9.text=\r\n\ Main-Methode,\ die\ einige\ Teile\ der\ Aufgabe\ testet.\r\n\r\n\ @param\ args\ Liste\ von\ Dateinamen\ unter\ denen\ Baeume\ als\ dot\r\n\ gespeichert\ werden\ sollen.\ Es\ werden\ nur\ die\ ersten\ beiden\ verwendet.\r\n
numComments=10
